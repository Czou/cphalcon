 State 0:
          program ::= * volt_language
          volt_language ::= * statement_list
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  23
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                       program accept
                 volt_language shift  1
                statement_list shift  2
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 1:
      (0) program ::= volt_language *

                             $ reduce 0

State 2:
      (1) volt_language ::= statement_list *
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                             $ reduce 1
                OPEN_DELIMITER shift  23
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 3:
      (2) statement_list ::= statement_list statement *

                     {default} reduce 2

State 4:
      (4) statement ::= raw_fragment *

                     {default} reduce 4

State 5:
      (5) statement ::= if_statement *

                     {default} reduce 5

State 6:
      (6) statement ::= elseif_statement *

                     {default} reduce 6

State 7:
      (7) statement ::= elsefor_statement *

                     {default} reduce 7

State 8:
      (8) statement ::= for_statement *

                     {default} reduce 8

State 9:
      (9) statement ::= set_statement *

                     {default} reduce 9

State 10:
     (10) statement ::= echo_statement *

                     {default} reduce 10

State 11:
     (11) statement ::= block_statement *

                     {default} reduce 11

State 12:
     (12) statement ::= cache_statement *

                     {default} reduce 12

State 13:
     (13) statement ::= extends_statement *

                     {default} reduce 13

State 14:
     (14) statement ::= include_statement *

                     {default} reduce 14

State 15:
     (15) statement ::= do_statement *

                     {default} reduce 15

State 16:
     (16) statement ::= return_statement *

                     {default} reduce 16

State 17:
     (17) statement ::= autoescape_statement *

                     {default} reduce 17

State 18:
     (18) statement ::= break_statement *

                     {default} reduce 18

State 19:
     (19) statement ::= continue_statement *

                     {default} reduce 19

State 20:
     (20) statement ::= macro_statement *

                     {default} reduce 20

State 21:
     (21) statement ::= empty_statement *

                     {default} reduce 21

State 22:
     (22) statement ::= macro_call_statement *

                     {default} reduce 22

State 23:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 24:
          if_statement ::= OPEN_DELIMITER IF * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF * expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF * expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  25
                 function_call shift  117

State 25:
          if_statement ::= OPEN_DELIMITER IF expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr * CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr * CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
               CLOSE_DELIMITER shift  26

State 26:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER * OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER * OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  314
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                statement_list shift  27
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 27:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  28
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 28:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                         ENDIF shift  29
                          ELSE shift  31
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 29:
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  30

State 30:
     (23) if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER *

                     {default} reduce 23

State 31:
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE * CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER

               CLOSE_DELIMITER shift  32

State 32:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER * OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  311
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                statement_list shift  33
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 33:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  34
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 34:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                         ENDIF shift  35
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 35:
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  36

State 36:
     (25) if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER *

                     {default} reduce 25

State 37:
          elseif_statement ::= OPEN_DELIMITER ELSEIF * expr CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  38
                 function_call shift  117

State 38:
          elseif_statement ::= OPEN_DELIMITER ELSEIF expr * CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
               CLOSE_DELIMITER shift  39

State 39:
     (28) elseif_statement ::= OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER *

                     {default} reduce 28

State 40:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  155
                 function_call shift  117

State 41:
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  42
                 function_call shift  117

State 42:
     (72) expr ::= MINUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 72

State 43:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  154
                 function_call shift  117

State 44:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= PLUS * expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  45
                 function_call shift  117

State 45:
     (73) expr ::= PLUS expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 73

State 46:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= expr TIMES * expr
          expr ::= * expr TIMES TIMES expr
          expr ::= expr TIMES * TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                         TIMES shift  152
                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  47
                 function_call shift  117

State 47:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
     (76) expr ::= expr TIMES expr *
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 76

State 48:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= expr DIVIDE * DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                        DIVIDE shift  150
                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  49
                 function_call shift  117

State 49:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
     (78) expr ::= expr DIVIDE expr *
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 78

State 50:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= expr MOD * expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  51
                 function_call shift  117

State 51:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
     (80) expr ::= expr MOD expr *
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 80

State 52:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= expr AND * expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  53
                 function_call shift  117

State 53:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
     (81) expr ::= expr AND expr *
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 81

State 54:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= expr OR * expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  55
                 function_call shift  117

State 55:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
     (82) expr ::= expr OR expr *
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 82

State 56:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= expr CONCAT * expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  57
                 function_call shift  117

State 57:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
     (83) expr ::= expr CONCAT expr *
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 83

State 58:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= expr PIPE * expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  59
                 function_call shift  117

State 59:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
     (84) expr ::= expr PIPE expr *
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 84

State 60:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= expr RANGE * expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  61
                 function_call shift  117

State 61:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
     (85) expr ::= expr RANGE expr *
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 85

State 62:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= expr EQUALS * expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  63
                 function_call shift  117

State 63:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
     (86) expr ::= expr EQUALS expr *
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 86

State 64:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= expr IS * NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= expr IS * DEFINED
          expr ::= * expr IS expr
          expr ::= expr IS * expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  147
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                       DEFINED shift  149
                 CBRACKET_OPEN shift  109
                          expr shift  65
                 function_call shift  117

State 65:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
     (89) expr ::= expr IS expr *
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 89

State 66:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= expr NOTEQUALS * expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  67
                 function_call shift  117

State 67:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
     (90) expr ::= expr NOTEQUALS expr *
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 90

State 68:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= expr IDENTICAL * expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  69
                 function_call shift  117

State 69:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
     (91) expr ::= expr IDENTICAL expr *
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 91

State 70:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= expr NOTIDENTICAL * expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  71
                 function_call shift  117

State 71:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
     (92) expr ::= expr NOTIDENTICAL expr *
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 92

State 72:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= expr LESS * expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  73
                 function_call shift  117

State 73:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
     (93) expr ::= expr LESS expr *
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 93

State 74:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= expr GREATER * expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  75
                 function_call shift  117

State 75:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
     (94) expr ::= expr GREATER expr *
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 94

State 76:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= expr GREATEREQUAL * expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  77
                 function_call shift  117

State 77:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
     (95) expr ::= expr GREATEREQUAL expr *
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 95

State 78:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= expr LESSEQUAL * expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  79
                 function_call shift  117

State 79:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
     (96) expr ::= expr LESSEQUAL expr *
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 96

State 80:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= expr DOT * expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  81
                 function_call shift  117

State 81:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
     (97) expr ::= expr DOT expr *
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                     {default} reduce 97

State 82:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= expr IN * expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  83
                 function_call shift  117

State 83:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
     (98) expr ::= expr IN expr *
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 98

State 84:
          expr ::= expr NOT * IN expr

                            IN shift  85

State 85:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= expr NOT IN * expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  86
                 function_call shift  117

State 86:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
     (99) expr ::= expr NOT IN expr *
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 99

State 87:
    (101) expr ::= expr INCR *

                     {default} reduce 101

State 88:
    (102) expr ::= expr DECR *

                     {default} reduce 102

State 89:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr SBRACKET_OPEN * expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr SBRACKET_OPEN * COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr SBRACKET_OPEN * slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= expr SBRACKET_OPEN * slice_offset COLON slice_offset SBRACKET_CLOSE
          slice_offset ::= * INTEGER
          slice_offset ::= * IDENTIFIER
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                         COLON shift  135
                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  146
                       INTEGER shift  145
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  90
                  slice_offset shift  140
                 function_call shift  117

State 90:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr SBRACKET_OPEN expr * SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                SBRACKET_CLOSE shift  91

State 91:
    (108) expr ::= expr SBRACKET_OPEN expr SBRACKET_CLOSE *

                     {default} reduce 108

State 92:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= expr QUESTION * expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  93
                 function_call shift  117

State 93:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr QUESTION expr * COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         COLON shift  94
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80

State 94:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= expr QUESTION expr COLON * expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  95
                 function_call shift  117

State 95:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
    (109) expr ::= expr QUESTION expr COLON expr *
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 109

State 96:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr PARENTHESES_OPEN * argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          function_call ::= expr PARENTHESES_OPEN * PARENTHESES_CLOSE
          argument_list ::= * argument_list COMMA argument_item
          argument_list ::= * argument_item
          argument_item ::= * expr
          argument_item ::= * STRING COLON expr
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
             PARENTHESES_CLOSE shift  133
                       INTEGER shift  119
                        STRING shift  130
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  97
                 argument_list shift  126
                 function_call shift  117
                 argument_item shift  134

State 97:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE
    (124) argument_item ::= expr *

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 124

State 98:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= NOT * expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  99
                 function_call shift  117

State 99:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
    (100) expr ::= NOT expr *
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 100

State 100:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= PARENTHESES_OPEN * expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  101
                 function_call shift  117

State 101:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= PARENTHESES_OPEN expr * PARENTHESES_CLOSE
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
             PARENTHESES_CLOSE shift  102

State 102:
    (103) expr ::= PARENTHESES_OPEN expr PARENTHESES_CLOSE *

                     {default} reduce 103

State 103:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= SBRACKET_OPEN * SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= SBRACKET_OPEN * array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          array_list ::= * array_list COMMA array_item
          array_list ::= * array_item
          array_item ::= * STRING COLON expr
          array_item ::= * expr
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  114
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                SBRACKET_CLOSE shift  105
                 CBRACKET_OPEN shift  109
                          expr shift  104
                    array_list shift  106
                    array_item shift  113
                 function_call shift  117

State 104:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
    (118) array_item ::= expr *
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 118

State 105:
    (104) expr ::= SBRACKET_OPEN SBRACKET_CLOSE *

                     {default} reduce 104

State 106:
          expr ::= SBRACKET_OPEN array_list * SBRACKET_CLOSE
          array_list ::= array_list * COMMA array_item

                         COMMA shift  108
                SBRACKET_CLOSE shift  107

State 107:
    (105) expr ::= SBRACKET_OPEN array_list SBRACKET_CLOSE *

                     {default} reduce 105

State 108:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          array_list ::= array_list COMMA * array_item
          array_item ::= * STRING COLON expr
          array_item ::= * expr
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  114
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  104
                    array_item shift  125
                 function_call shift  117

State 109:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= CBRACKET_OPEN * CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= CBRACKET_OPEN * array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          array_list ::= * array_list COMMA array_item
          array_list ::= * array_item
          array_item ::= * STRING COLON expr
          array_item ::= * expr
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  114
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                CBRACKET_CLOSE shift  110
                          expr shift  104
                    array_list shift  111
                    array_item shift  113
                 function_call shift  117

State 110:
    (106) expr ::= CBRACKET_OPEN CBRACKET_CLOSE *

                     {default} reduce 106

State 111:
          expr ::= CBRACKET_OPEN array_list * CBRACKET_CLOSE
          array_list ::= array_list * COMMA array_item

                         COMMA shift  108
                CBRACKET_CLOSE shift  112

State 112:
    (107) expr ::= CBRACKET_OPEN array_list CBRACKET_CLOSE *

                     {default} reduce 107

State 113:
    (116) array_list ::= array_item *

                     {default} reduce 116

State 114:
          array_item ::= STRING * COLON expr
    (128) expr ::= STRING *

                         COLON shift  115
                     {default} reduce 128

State 115:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          array_item ::= STRING COLON * expr
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  116
                 function_call shift  117

State 116:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
    (117) array_item ::= STRING COLON expr *
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 117

State 117:
    (119) expr ::= function_call *

                     {default} reduce 119

State 118:
    (126) expr ::= IDENTIFIER *

                     {default} reduce 126

State 119:
    (127) expr ::= INTEGER *

                     {default} reduce 127

State 120:
    (128) expr ::= STRING *

                     {default} reduce 128

State 121:
    (129) expr ::= DOUBLE *

                     {default} reduce 129

State 122:
    (130) expr ::= NULL *

                     {default} reduce 130

State 123:
    (131) expr ::= FALSE *

                     {default} reduce 131

State 124:
    (132) expr ::= TRUE *

                     {default} reduce 132

State 125:
    (115) array_list ::= array_list COMMA array_item *

                     {default} reduce 115

State 126:
          function_call ::= expr PARENTHESES_OPEN argument_list * PARENTHESES_CLOSE
          argument_list ::= argument_list * COMMA argument_item

                         COMMA shift  128
             PARENTHESES_CLOSE shift  127

State 127:
    (120) function_call ::= expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE *

                     {default} reduce 120

State 128:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          argument_list ::= argument_list COMMA * argument_item
          argument_item ::= * expr
          argument_item ::= * STRING COLON expr
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  130
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  97
                 function_call shift  117
                 argument_item shift  129

State 129:
    (122) argument_list ::= argument_list COMMA argument_item *

                     {default} reduce 122

State 130:
          argument_item ::= STRING * COLON expr
    (128) expr ::= STRING *

                         COLON shift  131
                     {default} reduce 128

State 131:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          argument_item ::= STRING COLON * expr
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  132
                 function_call shift  117

State 132:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE
    (125) argument_item ::= STRING COLON expr *

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 125

State 133:
    (121) function_call ::= expr PARENTHESES_OPEN PARENTHESES_CLOSE *

                     {default} reduce 121

State 134:
    (123) argument_list ::= argument_item *

                     {default} reduce 123

State 135:
          expr ::= expr SBRACKET_OPEN COLON * slice_offset SBRACKET_CLOSE
          slice_offset ::= * INTEGER
          slice_offset ::= * IDENTIFIER

                    IDENTIFIER shift  139
                       INTEGER shift  138
                  slice_offset shift  136

State 136:
          expr ::= expr SBRACKET_OPEN COLON slice_offset * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  137

State 137:
    (110) expr ::= expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE *

                     {default} reduce 110

State 138:
    (113) slice_offset ::= INTEGER *

                SBRACKET_CLOSE reduce 113

State 139:
    (114) slice_offset ::= IDENTIFIER *

                SBRACKET_CLOSE reduce 114

State 140:
          expr ::= expr SBRACKET_OPEN slice_offset * COLON SBRACKET_CLOSE
          expr ::= expr SBRACKET_OPEN slice_offset * COLON slice_offset SBRACKET_CLOSE

                         COLON shift  141

State 141:
          expr ::= expr SBRACKET_OPEN slice_offset COLON * SBRACKET_CLOSE
          expr ::= expr SBRACKET_OPEN slice_offset COLON * slice_offset SBRACKET_CLOSE
          slice_offset ::= * INTEGER
          slice_offset ::= * IDENTIFIER

                    IDENTIFIER shift  139
                       INTEGER shift  138
                SBRACKET_CLOSE shift  142
                  slice_offset shift  143

State 142:
    (111) expr ::= expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE *

                     {default} reduce 111

State 143:
          expr ::= expr SBRACKET_OPEN slice_offset COLON slice_offset * SBRACKET_CLOSE

                SBRACKET_CLOSE shift  144

State 144:
    (112) expr ::= expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE *

                     {default} reduce 112

State 145:
    (113) slice_offset ::= INTEGER *
    (127) expr ::= INTEGER *

                         COLON reduce 113
                     {default} reduce 127

State 146:
    (114) slice_offset ::= IDENTIFIER *
    (126) expr ::= IDENTIFIER *

                         COLON reduce 114
                     {default} reduce 126

State 147:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= expr IS NOT * DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= NOT * expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                       DEFINED shift  148
                 CBRACKET_OPEN shift  109
                          expr shift  99
                 function_call shift  117

State 148:
     (87) expr ::= expr IS NOT DEFINED *

                     {default} reduce 87

State 149:
     (88) expr ::= expr IS DEFINED *

                     {default} reduce 88

State 150:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= expr DIVIDE DIVIDE * expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  151
                 function_call shift  117

State 151:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
     (79) expr ::= expr DIVIDE DIVIDE expr *
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 79

State 152:
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= expr TIMES TIMES * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  153
                 function_call shift  117

State 153:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
     (77) expr ::= expr TIMES TIMES expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 77

State 154:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
     (75) expr ::= expr PLUS expr *
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 75

State 155:
          expr ::= expr * MINUS expr
     (74) expr ::= expr MINUS expr *
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 74

State 156:
          elsefor_statement ::= OPEN_DELIMITER ELSEFOR * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  157

State 157:
     (29) elsefor_statement ::= OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER *

                     {default} reduce 29

State 158:
          for_statement ::= OPEN_DELIMITER FOR * IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR * IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR * IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR * IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER

                    IDENTIFIER shift  159

State 159:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER * IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER * IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER * COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER * COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER

                         COMMA shift  295
                            IN shift  160

State 160:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN * expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  161
                 function_call shift  117

State 161:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                            IF shift  288
               CLOSE_DELIMITER shift  162

State 162:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  23
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                statement_list shift  163
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 163:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  164
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 164:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                        ENDFOR shift  165
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 165:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  166

State 166:
     (30) for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER *

                     {default} reduce 30

State 167:
          set_statement ::= OPEN_DELIMITER SET * set_assignments CLOSE_DELIMITER
          set_assignments ::= * set_assignments COMMA set_assignment
          set_assignments ::= * set_assignment
          set_assignment ::= * IDENTIFIER ASSIGN expr
          set_assignment ::= * IDENTIFIER ADD_ASSIGN expr
          set_assignment ::= * IDENTIFIER SUB_ASSIGN expr
          set_assignment ::= * IDENTIFIER MUL_ASSIGN expr
          set_assignment ::= * IDENTIFIER DIV_ASSIGN expr

                    IDENTIFIER shift  172
               set_assignments shift  168
                set_assignment shift  183

State 168:
          set_statement ::= OPEN_DELIMITER SET set_assignments * CLOSE_DELIMITER
          set_assignments ::= set_assignments * COMMA set_assignment

                         COMMA shift  170
               CLOSE_DELIMITER shift  169

State 169:
     (34) set_statement ::= OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER *

                     {default} reduce 34

State 170:
          set_assignments ::= set_assignments COMMA * set_assignment
          set_assignment ::= * IDENTIFIER ASSIGN expr
          set_assignment ::= * IDENTIFIER ADD_ASSIGN expr
          set_assignment ::= * IDENTIFIER SUB_ASSIGN expr
          set_assignment ::= * IDENTIFIER MUL_ASSIGN expr
          set_assignment ::= * IDENTIFIER DIV_ASSIGN expr

                    IDENTIFIER shift  172
                set_assignment shift  171

State 171:
     (35) set_assignments ::= set_assignments COMMA set_assignment *

                     {default} reduce 35

State 172:
          set_assignment ::= IDENTIFIER * ASSIGN expr
          set_assignment ::= IDENTIFIER * ADD_ASSIGN expr
          set_assignment ::= IDENTIFIER * SUB_ASSIGN expr
          set_assignment ::= IDENTIFIER * MUL_ASSIGN expr
          set_assignment ::= IDENTIFIER * DIV_ASSIGN expr

                        ASSIGN shift  173
                    ADD_ASSIGN shift  175
                    SUB_ASSIGN shift  177
                    MUL_ASSIGN shift  179
                    DIV_ASSIGN shift  181

State 173:
          set_assignment ::= IDENTIFIER ASSIGN * expr
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  174
                 function_call shift  117

State 174:
     (37) set_assignment ::= IDENTIFIER ASSIGN expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 37

State 175:
          set_assignment ::= IDENTIFIER ADD_ASSIGN * expr
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  176
                 function_call shift  117

State 176:
     (38) set_assignment ::= IDENTIFIER ADD_ASSIGN expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 38

State 177:
          set_assignment ::= IDENTIFIER SUB_ASSIGN * expr
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  178
                 function_call shift  117

State 178:
     (39) set_assignment ::= IDENTIFIER SUB_ASSIGN expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 39

State 179:
          set_assignment ::= IDENTIFIER MUL_ASSIGN * expr
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  180
                 function_call shift  117

State 180:
     (40) set_assignment ::= IDENTIFIER MUL_ASSIGN expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 40

State 181:
          set_assignment ::= IDENTIFIER DIV_ASSIGN * expr
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  182
                 function_call shift  117

State 182:
     (41) set_assignment ::= IDENTIFIER DIV_ASSIGN expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                     {default} reduce 41

State 183:
     (36) set_assignments ::= set_assignment *

                     {default} reduce 36

State 184:
          macro_statement ::= OPEN_DELIMITER MACRO * IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER MACRO * IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER

                    IDENTIFIER shift  185

State 185:
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER * PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER * PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER

              PARENTHESES_OPEN shift  186

State 186:
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN * PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN * macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_parameters ::= * macro_parameters COMMA macro_parameter
          macro_parameters ::= * macro_parameter
          macro_parameter ::= * IDENTIFIER
          macro_parameter ::= * IDENTIFIER ASSIGN macro_parameter_default

                    IDENTIFIER shift  278
             PARENTHESES_CLOSE shift  187
              macro_parameters shift  269
               macro_parameter shift  287

State 187:
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER

               CLOSE_DELIMITER shift  188

State 188:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  23
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                statement_list shift  189
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 189:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  190
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 190:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                           SET shift  167
                         MACRO shift  184
                      ENDMACRO shift  191
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 191:
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  192

State 192:
     (42) macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER *

                     {default} reduce 42

State 193:
          macro_call_statement ::= OPEN_DELIMITER CALL * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER CALL * expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  194
                 function_call shift  117

State 194:
          macro_call_statement ::= OPEN_DELIMITER CALL expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER CALL expr * PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  195
                           DOT shift  80

State 195:
          macro_call_statement ::= OPEN_DELIMITER CALL expr PARENTHESES_OPEN * argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER CALL expr PARENTHESES_OPEN * PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr PARENTHESES_OPEN * argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          function_call ::= expr PARENTHESES_OPEN * PARENTHESES_CLOSE
          argument_list ::= * argument_list COMMA argument_item
          argument_list ::= * argument_item
          argument_item ::= * expr
          argument_item ::= * STRING COLON expr
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
             PARENTHESES_CLOSE shift  264
                       INTEGER shift  119
                        STRING shift  130
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  97
                 argument_list shift  196
                 function_call shift  117
                 argument_item shift  134

State 196:
          macro_call_statement ::= OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list * PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          function_call ::= expr PARENTHESES_OPEN argument_list * PARENTHESES_CLOSE
          argument_list ::= argument_list * COMMA argument_item

                         COMMA shift  128
             PARENTHESES_CLOSE shift  197

State 197:
          macro_call_statement ::= OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
    (120) function_call ::= expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE *

               CLOSE_DELIMITER shift  198
                     {default} reduce 120

State 198:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  23
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                statement_list shift  199
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 199:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  200
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 200:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                       ENDCALL shift  201
                         BLOCK shift  204
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 201:
          macro_call_statement ::= OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  202

State 202:
     (54) macro_call_statement ::= OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER *

                     {default} reduce 54

State 203:
     (56) empty_statement ::= OPEN_DELIMITER CLOSE_DELIMITER *

                     {default} reduce 56

State 204:
          block_statement ::= OPEN_DELIMITER BLOCK * IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER BLOCK * IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER

                    IDENTIFIER shift  205

State 205:
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER * CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER

               CLOSE_DELIMITER shift  206

State 206:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER * OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  261
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                statement_list shift  207
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 207:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  208
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 208:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                      ENDBLOCK shift  209
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 209:
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  210

State 210:
     (58) block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER *

                     {default} reduce 58

State 211:
          cache_statement ::= OPEN_DELIMITER CACHE * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE * expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  212
                 function_call shift  117

State 212:
          cache_statement ::= OPEN_DELIMITER CACHE expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE expr * INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
               CLOSE_DELIMITER shift  213
                       INTEGER shift  255

State 213:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  23
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                statement_list shift  214
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 214:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  215
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 215:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                      ENDCACHE shift  216
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 216:
          cache_statement ::= OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  217

State 217:
     (60) cache_statement ::= OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER *

                     {default} reduce 60

State 218:
          extends_statement ::= OPEN_DELIMITER EXTENDS * STRING CLOSE_DELIMITER

                        STRING shift  219

State 219:
          extends_statement ::= OPEN_DELIMITER EXTENDS STRING * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  220

State 220:
     (62) extends_statement ::= OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER *

                     {default} reduce 62

State 221:
          include_statement ::= OPEN_DELIMITER INCLUDE * expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER INCLUDE * expr WITH expr CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  222
                 function_call shift  117

State 222:
          include_statement ::= OPEN_DELIMITER INCLUDE expr * CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER INCLUDE expr * WITH expr CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
               CLOSE_DELIMITER shift  223
                          WITH shift  224

State 223:
     (63) include_statement ::= OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER *

                     {default} reduce 63

State 224:
          include_statement ::= OPEN_DELIMITER INCLUDE expr WITH * expr CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  225
                 function_call shift  117

State 225:
          include_statement ::= OPEN_DELIMITER INCLUDE expr WITH expr * CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
               CLOSE_DELIMITER shift  226

State 226:
     (64) include_statement ::= OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER *

                     {default} reduce 64

State 227:
          do_statement ::= OPEN_DELIMITER DO * expr CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  228
                 function_call shift  117

State 228:
          do_statement ::= OPEN_DELIMITER DO expr * CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
               CLOSE_DELIMITER shift  229

State 229:
     (65) do_statement ::= OPEN_DELIMITER DO expr CLOSE_DELIMITER *

                     {default} reduce 65

State 230:
          return_statement ::= OPEN_DELIMITER RETURN * expr CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  231
                 function_call shift  117

State 231:
          return_statement ::= OPEN_DELIMITER RETURN expr * CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
               CLOSE_DELIMITER shift  232

State 232:
     (66) return_statement ::= OPEN_DELIMITER RETURN expr CLOSE_DELIMITER *

                     {default} reduce 66

State 233:
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE * FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE * TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER

                         FALSE shift  234
                          TRUE shift  249

State 234:
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE FALSE * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER

               CLOSE_DELIMITER shift  235

State 235:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  23
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                statement_list shift  236
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 236:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  237
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 237:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                 ENDAUTOESCAPE shift  238
                         BREAK shift  240
                      CONTINUE shift  242

State 238:
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  239

State 239:
     (67) autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER *

                     {default} reduce 67

State 240:
          break_statement ::= OPEN_DELIMITER BREAK * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  241

State 241:
     (69) break_statement ::= OPEN_DELIMITER BREAK CLOSE_DELIMITER *

                     {default} reduce 69

State 242:
          continue_statement ::= OPEN_DELIMITER CONTINUE * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  243

State 243:
     (70) continue_statement ::= OPEN_DELIMITER CONTINUE CLOSE_DELIMITER *

                     {default} reduce 70

State 244:
          echo_statement ::= OPEN_EDELIMITER * expr CLOSE_EDELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  245
                 function_call shift  117

State 245:
          echo_statement ::= OPEN_EDELIMITER expr * CLOSE_EDELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
              CLOSE_EDELIMITER shift  246

State 246:
     (57) echo_statement ::= OPEN_EDELIMITER expr CLOSE_EDELIMITER *

                     {default} reduce 57

State 247:
     (71) raw_fragment ::= RAW_FRAGMENT *

                     {default} reduce 71

State 248:
      (3) statement_list ::= statement *

                     {default} reduce 3

State 249:
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE TRUE * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER

               CLOSE_DELIMITER shift  250

State 250:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  23
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                statement_list shift  251
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 251:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  252
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 252:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                 ENDAUTOESCAPE shift  253
                         BREAK shift  240
                      CONTINUE shift  242

State 253:
          autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  254

State 254:
     (68) autoescape_statement ::= OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER *

                     {default} reduce 68

State 255:
          cache_statement ::= OPEN_DELIMITER CACHE expr INTEGER * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER

               CLOSE_DELIMITER shift  256

State 256:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  23
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                statement_list shift  257
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 257:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  258
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 258:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                      ENDCACHE shift  259
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 259:
          cache_statement ::= OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  260

State 260:
     (61) cache_statement ::= OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER *

                     {default} reduce 61

State 261:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER * ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                      ENDBLOCK shift  262
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 262:
          block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  263

State 263:
     (59) block_statement ::= OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER *

                     {default} reduce 59

State 264:
          macro_call_statement ::= OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE * CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
    (121) function_call ::= expr PARENTHESES_OPEN PARENTHESES_CLOSE *

               CLOSE_DELIMITER shift  265
                     {default} reduce 121

State 265:
          macro_call_statement ::= OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER * OPEN_DELIMITER ENDCALL CLOSE_DELIMITER

                OPEN_DELIMITER shift  266

State 266:
          macro_call_statement ::= OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER * ENDCALL CLOSE_DELIMITER

                       ENDCALL shift  267

State 267:
          macro_call_statement ::= OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  268

State 268:
     (55) macro_call_statement ::= OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER *

                     {default} reduce 55

State 269:
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters * PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_parameters ::= macro_parameters * COMMA macro_parameter

                         COMMA shift  276
             PARENTHESES_CLOSE shift  270

State 270:
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER

               CLOSE_DELIMITER shift  271

State 271:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  23
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                statement_list shift  272
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 272:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  273
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 273:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                           SET shift  167
                         MACRO shift  184
                      ENDMACRO shift  274
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 274:
          macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  275

State 275:
     (43) macro_statement ::= OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER *

                     {default} reduce 43

State 276:
          macro_parameters ::= macro_parameters COMMA * macro_parameter
          macro_parameter ::= * IDENTIFIER
          macro_parameter ::= * IDENTIFIER ASSIGN macro_parameter_default

                    IDENTIFIER shift  278
               macro_parameter shift  277

State 277:
     (44) macro_parameters ::= macro_parameters COMMA macro_parameter *

                     {default} reduce 44

State 278:
     (46) macro_parameter ::= IDENTIFIER *
          macro_parameter ::= IDENTIFIER * ASSIGN macro_parameter_default

                        ASSIGN shift  279
                     {default} reduce 46

State 279:
          macro_parameter ::= IDENTIFIER ASSIGN * macro_parameter_default
          macro_parameter_default ::= * INTEGER
          macro_parameter_default ::= * STRING
          macro_parameter_default ::= * DOUBLE
          macro_parameter_default ::= * NULL
          macro_parameter_default ::= * FALSE
          macro_parameter_default ::= * TRUE

                       INTEGER shift  281
                        STRING shift  282
                        DOUBLE shift  283
                          NULL shift  284
                         FALSE shift  285
                          TRUE shift  286
       macro_parameter_default shift  280

State 280:
     (47) macro_parameter ::= IDENTIFIER ASSIGN macro_parameter_default *

                     {default} reduce 47

State 281:
     (48) macro_parameter_default ::= INTEGER *

                     {default} reduce 48

State 282:
     (49) macro_parameter_default ::= STRING *

                     {default} reduce 49

State 283:
     (50) macro_parameter_default ::= DOUBLE *

                     {default} reduce 50

State 284:
     (51) macro_parameter_default ::= NULL *

                     {default} reduce 51

State 285:
     (52) macro_parameter_default ::= FALSE *

                     {default} reduce 52

State 286:
     (53) macro_parameter_default ::= TRUE *

                     {default} reduce 53

State 287:
     (45) macro_parameters ::= macro_parameter *

                     {default} reduce 45

State 288:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr IF * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  289
                 function_call shift  117

State 289:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
               CLOSE_DELIMITER shift  290

State 290:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  23
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                statement_list shift  291
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 291:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  292
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 292:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                        ENDFOR shift  293
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 293:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  294

State 294:
     (31) for_statement ::= OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER *

                     {default} reduce 31

State 295:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA * IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA * IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER

                    IDENTIFIER shift  296

State 296:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER * IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER * IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER

                            IN shift  297

State 297:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN * expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  298
                 function_call shift  117

State 298:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
                            IF shift  304
               CLOSE_DELIMITER shift  299

State 299:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  23
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                statement_list shift  300
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 300:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  301
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 301:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                        ENDFOR shift  302
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 302:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  303

State 303:
     (32) for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER *

                     {default} reduce 32

State 304:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF * expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= * MINUS expr
          expr ::= * PLUS expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr TIMES TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr DIVIDE DIVIDE expr
          expr ::= * expr MOD expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr CONCAT expr
          expr ::= * expr PIPE expr
          expr ::= * expr RANGE expr
          expr ::= * expr EQUALS expr
          expr ::= * expr IS NOT DEFINED
          expr ::= * expr IS DEFINED
          expr ::= * expr IS expr
          expr ::= * expr NOTEQUALS expr
          expr ::= * expr IDENTICAL expr
          expr ::= * expr NOTIDENTICAL expr
          expr ::= * expr LESS expr
          expr ::= * expr GREATER expr
          expr ::= * expr GREATEREQUAL expr
          expr ::= * expr LESSEQUAL expr
          expr ::= * expr DOT expr
          expr ::= * expr IN expr
          expr ::= * expr NOT IN expr
          expr ::= * NOT expr
          expr ::= * expr INCR
          expr ::= * expr DECR
          expr ::= * PARENTHESES_OPEN expr PARENTHESES_CLOSE
          expr ::= * SBRACKET_OPEN SBRACKET_CLOSE
          expr ::= * SBRACKET_OPEN array_list SBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN CBRACKET_CLOSE
          expr ::= * CBRACKET_OPEN array_list CBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= * expr QUESTION expr COLON expr
          expr ::= * expr SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= * expr SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          expr ::= * function_call
          function_call ::= * expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= * expr PARENTHESES_OPEN PARENTHESES_CLOSE
          expr ::= * IDENTIFIER
          expr ::= * INTEGER
          expr ::= * STRING
          expr ::= * DOUBLE
          expr ::= * NULL
          expr ::= * FALSE
          expr ::= * TRUE

                          PLUS shift  44
                         MINUS shift  41
                 SBRACKET_OPEN shift  103
                           NOT shift  98
              PARENTHESES_OPEN shift  100
                    IDENTIFIER shift  118
                       INTEGER shift  119
                        STRING shift  120
                        DOUBLE shift  121
                          NULL shift  122
                         FALSE shift  123
                          TRUE shift  124
                 CBRACKET_OPEN shift  109
                          expr shift  305
                 function_call shift  117

State 305:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr * CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * TIMES TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * DIVIDE DIVIDE expr
          expr ::= expr * MOD expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * CONCAT expr
          expr ::= expr * PIPE expr
          expr ::= expr * RANGE expr
          expr ::= expr * EQUALS expr
          expr ::= expr * IS NOT DEFINED
          expr ::= expr * IS DEFINED
          expr ::= expr * IS expr
          expr ::= expr * NOTEQUALS expr
          expr ::= expr * IDENTICAL expr
          expr ::= expr * NOTIDENTICAL expr
          expr ::= expr * LESS expr
          expr ::= expr * GREATER expr
          expr ::= expr * GREATEREQUAL expr
          expr ::= expr * LESSEQUAL expr
          expr ::= expr * DOT expr
          expr ::= expr * IN expr
          expr ::= expr * NOT IN expr
          expr ::= expr * INCR
          expr ::= expr * DECR
          expr ::= expr * SBRACKET_OPEN expr SBRACKET_CLOSE
          expr ::= expr * QUESTION expr COLON expr
          expr ::= expr * SBRACKET_OPEN COLON slice_offset SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON SBRACKET_CLOSE
          expr ::= expr * SBRACKET_OPEN slice_offset COLON slice_offset SBRACKET_CLOSE
          function_call ::= expr * PARENTHESES_OPEN argument_list PARENTHESES_CLOSE
          function_call ::= expr * PARENTHESES_OPEN PARENTHESES_CLOSE

                            IN shift  82
                      QUESTION shift  92
                         RANGE shift  60
                           AND shift  52
                            OR shift  54
                            IS shift  64
                        EQUALS shift  62
                     NOTEQUALS shift  66
                          LESS shift  72
                       GREATER shift  74
                  GREATEREQUAL shift  76
                     LESSEQUAL shift  78
                     IDENTICAL shift  68
                  NOTIDENTICAL shift  70
                        DIVIDE shift  48
                         TIMES shift  46
                           MOD shift  50
                          PLUS shift  43
                         MINUS shift  40
                        CONCAT shift  56
                 SBRACKET_OPEN shift  89
                          PIPE shift  58
                           NOT shift  84
                          INCR shift  87
                          DECR shift  88
              PARENTHESES_OPEN shift  96
                           DOT shift  80
               CLOSE_DELIMITER shift  306

State 306:
          statement_list ::= * statement_list statement
          statement_list ::= * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER * statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  23
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                statement_list shift  307
                     statement shift  248
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 307:
          statement_list ::= statement_list * statement
          statement ::= * raw_fragment
          statement ::= * if_statement
          statement ::= * elseif_statement
          statement ::= * elsefor_statement
          statement ::= * for_statement
          statement ::= * set_statement
          statement ::= * echo_statement
          statement ::= * block_statement
          statement ::= * cache_statement
          statement ::= * extends_statement
          statement ::= * include_statement
          statement ::= * do_statement
          statement ::= * return_statement
          statement ::= * autoescape_statement
          statement ::= * break_statement
          statement ::= * continue_statement
          statement ::= * macro_statement
          statement ::= * empty_statement
          statement ::= * macro_call_statement
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= * OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= * OPEN_DELIMITER ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= * OPEN_DELIMITER ELSEFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= * OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list * OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= * OPEN_DELIMITER SET set_assignments CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= * OPEN_DELIMITER MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= * OPEN_DELIMITER CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= * OPEN_DELIMITER CLOSE_DELIMITER
          echo_statement ::= * OPEN_EDELIMITER expr CLOSE_EDELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= * OPEN_DELIMITER BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= * OPEN_DELIMITER CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= * OPEN_DELIMITER EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr CLOSE_DELIMITER
          include_statement ::= * OPEN_DELIMITER INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= * OPEN_DELIMITER DO expr CLOSE_DELIMITER
          return_statement ::= * OPEN_DELIMITER RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= * OPEN_DELIMITER AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= * OPEN_DELIMITER BREAK CLOSE_DELIMITER
          continue_statement ::= * OPEN_DELIMITER CONTINUE CLOSE_DELIMITER
          raw_fragment ::= * RAW_FRAGMENT

                OPEN_DELIMITER shift  308
               OPEN_EDELIMITER shift  244
                  RAW_FRAGMENT shift  247
                     statement shift  3
                  raw_fragment shift  4
                  if_statement shift  5
              elseif_statement shift  6
             elsefor_statement shift  7
                 for_statement shift  8
                 set_statement shift  9
                echo_statement shift  10
               block_statement shift  11
               cache_statement shift  12
             extends_statement shift  13
             include_statement shift  14
                  do_statement shift  15
              return_statement shift  16
          autoescape_statement shift  17
               break_statement shift  18
            continue_statement shift  19
               macro_statement shift  20
               empty_statement shift  21
          macro_call_statement shift  22

State 308:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER * ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                        ENDFOR shift  309
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 309:
          for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  310

State 310:
     (33) for_statement ::= OPEN_DELIMITER FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER *

                     {default} reduce 33

State 311:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER * ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                         ENDIF shift  312
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 312:
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  313

State 313:
     (26) if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER *

                     {default} reduce 26

State 314:
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER * ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER * IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER * ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER
          elseif_statement ::= OPEN_DELIMITER * ELSEIF expr CLOSE_DELIMITER
          elsefor_statement ::= OPEN_DELIMITER * ELSEFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          for_statement ::= OPEN_DELIMITER * FOR IDENTIFIER COMMA IDENTIFIER IN expr IF expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDFOR CLOSE_DELIMITER
          set_statement ::= OPEN_DELIMITER * SET set_assignments CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_statement ::= OPEN_DELIMITER * MACRO IDENTIFIER PARENTHESES_OPEN macro_parameters PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDMACRO CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN argument_list PARENTHESES_CLOSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          macro_call_statement ::= OPEN_DELIMITER * CALL expr PARENTHESES_OPEN PARENTHESES_CLOSE CLOSE_DELIMITER OPEN_DELIMITER ENDCALL CLOSE_DELIMITER
          empty_statement ::= OPEN_DELIMITER * CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          block_statement ::= OPEN_DELIMITER * BLOCK IDENTIFIER CLOSE_DELIMITER OPEN_DELIMITER ENDBLOCK CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          cache_statement ::= OPEN_DELIMITER * CACHE expr INTEGER CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDCACHE CLOSE_DELIMITER
          extends_statement ::= OPEN_DELIMITER * EXTENDS STRING CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr CLOSE_DELIMITER
          include_statement ::= OPEN_DELIMITER * INCLUDE expr WITH expr CLOSE_DELIMITER
          do_statement ::= OPEN_DELIMITER * DO expr CLOSE_DELIMITER
          return_statement ::= OPEN_DELIMITER * RETURN expr CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE FALSE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          autoescape_statement ::= OPEN_DELIMITER * AUTOESCAPE TRUE CLOSE_DELIMITER statement_list OPEN_DELIMITER ENDAUTOESCAPE CLOSE_DELIMITER
          break_statement ::= OPEN_DELIMITER * BREAK CLOSE_DELIMITER
          continue_statement ::= OPEN_DELIMITER * CONTINUE CLOSE_DELIMITER

                            IF shift  24
               CLOSE_DELIMITER shift  203
                         ENDIF shift  315
                          ELSE shift  317
                        ELSEIF shift  37
                       ELSEFOR shift  156
                           FOR shift  158
                           SET shift  167
                         MACRO shift  184
                          CALL shift  193
                         BLOCK shift  204
                         CACHE shift  211
                       EXTENDS shift  218
                       INCLUDE shift  221
                            DO shift  227
                        RETURN shift  230
                    AUTOESCAPE shift  233
                         BREAK shift  240
                      CONTINUE shift  242

State 315:
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  316

State 316:
     (24) if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER *

                     {default} reduce 24

State 317:
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE * CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER

               CLOSE_DELIMITER shift  318

State 318:
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER * OPEN_DELIMITER ENDIF CLOSE_DELIMITER

                OPEN_DELIMITER shift  319

State 319:
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER * ENDIF CLOSE_DELIMITER

                         ENDIF shift  320

State 320:
          if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF * CLOSE_DELIMITER

               CLOSE_DELIMITER shift  321

State 321:
     (27) if_statement ::= OPEN_DELIMITER IF expr CLOSE_DELIMITER OPEN_DELIMITER ELSE CLOSE_DELIMITER OPEN_DELIMITER ENDIF CLOSE_DELIMITER *

                     {default} reduce 27

